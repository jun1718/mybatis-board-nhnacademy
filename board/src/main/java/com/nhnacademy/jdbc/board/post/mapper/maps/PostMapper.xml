<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nhnacademy.jdbc.board.post.mapper.PostMapper">
    <select id="findByIdUp" resultType="com.nhnacademy.jdbc.board.post.domain.PostVoAboutDetailUp">
        select  p.post_no as `postNo`,
                p.title as `postTitle`,
                p.content as `postContent`,
                wr.id as `writerId`,
                wr.nickname as `writerNickname`,
                ifnull(mo.id,"") as `modifierId`,
                ifnull(mo.nickname,"") as `modifierNickname`,
                p.writed_at as `postWritedAt`,
                p.modified_at as `postModifiedAt`,
                p.post_no_above as 'postNoAbove',
                p.file_name as `fileName`
        from Posts as p
                 inner join Users as wr
                            on p.user_no_writer = wr.user_no
                 Left join Users as mo
                           on p.user_no_modifier = mo.user_no
        where p.post_no = #{postNo}
    </select>

    <select id="findByIdDown" resultType="com.nhnacademy.jdbc.board.post.domain.PostVoAboutDetailDown">
        select   u.id as `userId`,
                 u.nickname,
                 c.content as `commnet`
        from `Comments` as c
                 inner join Users as u
                            on c.user_no = u.user_no
        where c.post_no = ${postNo}
    </select>

    <select id="findAllOfAdmin" resultType="com.nhnacademy.jdbc.board.post.domain.PostVoAboutList">
        select p.post_no as 'postNo',
                p.title as 'postTitle',
                wr.id as 'writerId',
                wr.nickname as 'writerNickname',
                ifnull(mo.id,'') as 'modifierId',
                ifnull(mo.nickname,'') as 'modifierNickname',
                p.writed_at as 'postWritedAt',
                (
                    select count(*)
                    from Comments as c
                    where p.post_no = c.post_no
                    ) as 'viewCount',
                p.view_activate as 'viewActivate'
        from Posts as p
                 inner join Users as wr
                            on p.user_no_writer = wr.user_no
                 Left join Users as mo
                           on p.user_no_modifier = mo.user_no
                where user_no = ${userNo}
        order by p.post_no desc
            limit ${limit} offset ${offset};
    </select>
    <select id = "getTotalContentOfAdmin" resultType = "Integer">
        select count(*)
            from Posts;
    </select>
    <select id="findAllOfUser" resultType="com.nhnacademy.jdbc.board.post.domain.PostVoAboutList">
        select p.post_no as 'postNo',
                p.title as 'postTitle',
                wr.id as 'writerId',
                wr.nickname as 'writerNickname',
                ifnull(mo.id,'') as 'modifierId',
                ifnull(mo.nickname,'') as 'modifierNickname',
                p.writed_at as 'postWritedAt',
                (
                    select count(*)
                    from Comments as c
                    where p.post_no = c.post_no
                    ) as 'viewCount',
                p.view_activate as 'viewActivate'
        from (select * from Posts where view_activate=1) as p
                 inner join Users as wr
        on p.user_no_writer = wr.user_no
            Left join Users as mo
            on p.user_no_modifier = mo.user_no
        order by p.post_no desc
            limit ${limit} offset ${offset};
    </select>
    <select id = "getTotalContentOfUser" resultType = "Integer">
        select count(*)
        from Posts
        where view_activate = 1;
    </select>
    <select id="findPostFileName" resultType="com.nhnacademy.jdbc.board.post.domain.Post">
        select *
        from Posts
        where post_no = #{postNo}

    </select>
    <insert id="insertPost">
        insert into Posts (post_no,post_no_above,user_no_writer,user_no_modifier,writed_at,modified_at,title,content,view_activate,file_name)
        values (#{post.postNo},#{post.postNoAbove},#{post.userNoWriter},#{post.userNoModifier},#{post.writedAt},#{post.modifiedAt},#{post.title},#{post.content},#{post.viewActivate},#{post.fileName})
    </insert>
    <update id="deleteOrAlive">

update Posts set view_activate =
    Case
    when view_activate = 1 THEN 0
        ELSE 1
    END
    where post_no=#{postNo}
    </update>
    <update id="updatePost">
        update Posts set title= #{title}, content=#{content}
        where post_no = #{postNo}
    </update>

    <select id="getLikedAllOfAdmin" resultType="com.nhnacademy.jdbc.board.post.domain.PostVoAboutList">
        select p.post_no as 'postNo',
                p.title as 'postTitle',
                wr.id as 'writerId',
                wr.nickname as 'writerNickname',
                ifnull(mo.id,'') as 'modifierId',
                ifnull(mo.nickname,'') as 'modifierNickname',
                p.writed_at as 'postWritedAt',
                (
                    select count(*)
                    from Comments as c
                    where p.post_no = c.post_no
                    ) as 'viewCount',
                p.view_activate as 'viewActivate'
        from (select * from Posts where view_activate=1) as p
                 inner join Users as wr
                            on p.user_no_writer = wr.user_no
                 Left join Users as mo
                           on p.user_no_modifier = mo.user_no
        order by p.post_no desc
            limit ${limit} offset ${offset};
    </select>

</mapper>